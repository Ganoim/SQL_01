-----day07

/* 서브쿼리(한 타입에 데이터가 여러개일 경우 =대신 IN을 사용) */
/* WHERE 절 SELECT문 사용 
   WHERE 절: 특정한 레코드를 선별하기위한 조건
*/
-- 부서번호가 10인 직원들의 정보를 조회
SELECT *
FROM EMP
WHERE DEPTNO = 10;
-- 직원이름이 KING인 직원과 같은 부서에서 근무하는 직원들의 정보를 조회
-- 1. 이름이 KING인 직원의 부서번호 조회
SELECT DEPTNO
FROM EMP
WHERE ENAME = 'KING'; -- 10
-- 2. 10번 부서에서 근무하는 직원들의 정보를 조회
SELECT *
FROM EMP
WHERE DEPTNO = (SELECT DEPTNO
                FROM EMP
                WHERE ENAME = 'KING');

SELECT *
FROM EMP
WHERE DEPTNO IN (SELECT DEPTNO
                FROM EMP
                WHERE JOB = 'MANAGER');

-- 평균 급여보다 많으 급여를 받는 직원들의 정보를 조회
-- 1.평균 급여 조회
SELECT AVG(SAL)
FROM EMP; -- 2077.084
-- 2.조회된 평균 급여와 직원의 급여를 비교(급여(SAL)가 2077보다 큰 직원들)
SELECT *
FROM EMP
WHERE SAL >= (SELECT AVG(SAL)
              FROM EMP);
              
-- 'JONES'보다 급여를 많이 받는 직원들의 정보를 조회
-- 1.'JONES'의 SAL 조회
SELECT SAL
FROM EMP
WHERE ENAME = 'JONES';

-- 2.조회된'JONES'의 SAL보다 많은 급여를 받는 직원들의 정보를 조회
SELECT *
FROM EMP
WHERE SAL >= (SELECT SAL
              FROM EMP
              WHERE ENAME = 'JONES');

/* 'SALESMAN'이 근무하지 않는 부서의 부서번호와 인원수를 조회 */
SELECT DEPTNO
FROM EMP
WHERE JOB = 'SALESMAN';

SELECT DEPTNO, COUNT(*)
FROM EMP
WHERE DEPTNO NOT IN (SELECT DEPTNO
                     FROM EMP
                     WHERE JOB = 'SALESMAN')
GROUP BY DEPTNO;

-- 'JAMES'와 같은 달에 입사한 직원의 이름과 직무 급여를 조회
--1.'JAMEW'가 입사한달(MONTH) 조회
SELECT TO_CHAR(HIREDATE, 'MM')
FROM EMP
WHERE ENAME = 'JAMES'; -- 12
--2.12월에 입사한 직원의 이름 직무 급여 
SELECT ENAME, JOB, SAL
FROM EMP
WHERE TO_CHAR(HIREDATE, 'MM') = (SELECT TO_CHAR(HIREDATE, 'MM')
                                 FROM EMP
                                 WHERE ENAME = 'JAMES');

-- 부서별 평균 급여가 'MANAGER'의 평균 급여 보다 높은 부서의 번호와 평균급여를 조회
--1.'MANAGER'의 평균 급여
SELECT AVG(SAL)
FROM EMP
WHERE JOB = 'MANAGER';
--2.부서별 평균급여 조회
SELECT DEPTNO, AVG(SAL)
FROM EMP
GROUP BY DEPTNO
HAVING AVG(SAL) > (SELECT AVG(SAL)
                   FROM EMP
                   WHERE JOB = 'MANAGER');

/* JOIN : 두 개 이상의 테이블을 연결하여 하난의 테이블터럼 만들어 사용
   INNER JOIN, OUTER JOIN
*/
SELECT *
FROM EMP, DEPT; -- 48개의 레코드(기준이 되는 테이블보다 레코드수가 더 많이 나오면 조건이 잘못됬거나 없는것)
SELECT * FROM EMP;  -- 12개의 레코드
SELECT * FROM DEPT; -- 4개의 레코드
-- WHERE절에 조인을 위한 조건과 레코드를 선별하기 위한 조건을 같이 쓰는 방법
SELECT *
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO AND EMP.ENAME = 'SMITH';

-- FROM절에 조인을 위한 조건을 쓰는 방법
SELECT *
FROM EMP INNER JOIN DEPT ON EMP.DEPTNO = DEPT.DEPTNO
WHERE EMP.ENAME = 'SMITH';
-- 테이블명 별칭(FROM부터 나오는 테아블명은 별칭으로 써야함)-SQL을 프로그램이 읽을때 FROM부터 읽음
SELECT *
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;
SELECT *
FROM EMP E INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO;

SELECT ENAME, DNAME, D.DEPTNO, E.DEPTNO
FROM EMP E INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO;

-- 'SMITH'가 근무하는 부서의 이름, 지역 조회
-- 조인
SELECT DEPT.DEPTNO, DEPT.LOC
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO AND ENAME = 'SMITH';

SELECT DEPT.DEPTNO, DEPT.LOC
FROM EMP INNER JOIN DEPT ON EMP.DEPTNO = DEPT.DEPTNO
WHERE EMP.ENAME = 'SMITH';
-- 서브쿼리문
SELECT DEPTNO, LOC
FROM DEPT
WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SMITH');

-- 'NEW YORK'에서 근무하는 직원의 부서이름, 직원이름, 직책 조회
SELECT DEPT.DNAME, EMP.ENAME, EMP.JOB
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO AND DEPT.LOC = 'NEW YORK';

SELECT DEPT.DNAME, EMP.ENAME, EMP.JOB
FROM EMP INNER JOIN DEPT ON EMP.DEPTNO = DEPT.DEPTNO
WHERE DEPT.LOC = 'NEW YORK';

-- 'SMITH' 직원의 상급자(MGR)의 이름 조회
SELECT ENAME 
FROM EMP
WHERE EMPNO = (SELECT MGR FROM EMP WHERE ENAME='SMITH');

SELECT E1.ENAME ||'의 MGR은'||E2.ENAME ||'입니다'
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO; -- EMP.E1-7902 = EMP.E2-7902

/*
|| 부서이름 ||  지역  || 직원수 ||
  RESEARCH   DALLAS     3
  SALES      CHICAGO    6
*/
-- 부서별 직원수 조회
SELECT DEPTNO, COUNT(*)
FROM EMP
GROUP BY DEPTNO;
-- SELECT문으로 나온 결과값을 하나의 테이블로 활용
SELECT D.DNAME, D.LOC, COUNT_E.EMPCOUNT
FROM DEPT D, (SELECT DEPTNO, COUNT(*) AS EMPCOUNT FROM EMP GROUP BY DEPTNO) COUNT_E
WHERE D.DEPTNO = COUNT_E.DEPTNO;
