-----day10

/* [전체상품목록] 기능 
상품이름, 상품가격, 재고, 종류
*/
SELECT *
FROM GOODS -- 전체상품목록
WHERE GSTOCK > 0; -- 판매가 가능한 상품목록(재고가 0이 아닌것) 
--ORDER BY GSTOCK DESC;
/* [종류별상품목록] 선택하 종류 '식품' 기능 */
SELECT *
FROM GOODS
WHERE GTYPE = '식품' AND GSTOCK > 0;

/* [상품주문]기능 - 바나나우유 상품 구매, 5개를 구매 */
--1. ORDERS 테이블에 INSERT
INSERT INTO ORDERS(ODCODE, ODMID, ODGCODE, ODQTY, ODDATE)
VALUES ('O0001','JGH', 'G0115', 5, SYSDATE); --1 행 이(가) 삽입되었습니다.
--2. GOODS 테이블에 UPPDATE
UPDATE GOODS
SET GSTOCK = GSTOCK - 5
WHERE GCODE = 'G0115'; --1 행 이(가) 업데이트되었습니다.
COMMIT;
SELECT * FROM MEMBERS;
SELECT * FROM GOODS;
SELECT * FROM ORDERS;

/* [상품주문]기능 - G3000 상품 구매, 1개를 구매 */
--1. ORDERS 테이블에 INSERT
INSERT INTO ORDERS(ODCODE, ODMID, ODGCODE, ODQTY, ODDATE)
VALUES ('O0002','JGH', 'G3000', 1, SYSDATE);
--2. GOODS 테이블에 UPPDATE
UPDATE GOODS
SET GSTOCK = GSTOCK - 1
WHERE GCODE = 'G3000';

/* [상품주문]기능 - G1357 상품 구매, 3개를 구매 */
--1. ORDERS 테이블에 INSERT
INSERT INTO ORDERS(ODCODE, ODMID, ODGCODE, ODQTY, ODDATE)
VALUES ('O0003','YKD', 'G1357', 3, SYSDATE);
--2. GOODS 테이블에 UPPDATE
UPDATE GOODS
SET GSTOCK = GSTOCK - 3
WHERE GCODE = 'G1357';

/* [상품주문]기능 - G1234 상품 구매, 1개를 구매 */
--1. ORDERS 테이블에 INSERT
INSERT INTO ORDERS(ODCODE, ODMID, ODGCODE, ODQTY, ODDATE)
VALUES ('O0004','GDH', 'G1234', 1, SYSDATE);
--2. GOODS 테이블에 UPPDATE
UPDATE GOODS
SET GSTOCK = GSTOCK - 1
WHERE GCODE = 'G1234';

/* [상품주문]기능 - G2468 상품 구매, 10개를 구매 */
--1. ORDERS 테이블에 INSERT
INSERT INTO ORDERS(ODCODE, ODMID, ODGCODE, ODQTY, ODDATE)
VALUES ('O0005','PYJ', 'G2468', 10, SYSDATE);
--2. GOODS 테이블에 UPPDATE
UPDATE GOODS
SET GSTOCK = GSTOCK - 10
WHERE GCODE = 'G2468';

/* [주문내역조회] 기능 
[주문자이름][상품이름][상품가격][주문수량][총주문금액][주문일시]
*/
/*
SELECT
FROM 테이블A, 테이블B, 테이블C
WHERE 조인조건
*/
SELECT MNAME, GNAME, GPRICE, ODQTY, GPRICE*ODQTY, ODDATE
FROM MEMBERS M, GOODS G, ORDERS O
WHERE M.MID = O.ODMID AND G.GCODE = O.ODGCODE AND O.ODMID = 'JGH';

/*
SELECT
FROM 테이블A INNER JOIN 테이블B IN 조인조건 INNER JOIN 테이블C ON 조인조건
*/
SELECT MNAME, GNAME, GPRICE, ODQTY, GPRICE*ODQTY, ODDATE
FROM MEMBERS M INNER JOIN ORDERS O ON M.MID = O.ODMID INNER JOIN GOODS G ON G.GCODE = O.ODGCODE
WHERE O.ODMID = 'JGH';

/* [종류별상품목록] 선택한 종류 '식품' 기능 - 가격이 낮은 순 */
SELECT *
FROM GOODS
WHERE GTYPE = '식품' AND GSTOCK > 0
ORDER BY GPRICE;
-- 주문금액이 가장 많은 회원 순으로 정렬  - 회원아이디, 총구매액수
SELECT O.ODMID, SUM(O.ODQTY*G.GPRICE) AS TOTALPRICE
FROM ORDERS O, GOODS G
WHERE O.ODGCODE = G.GCODE
GROUP BY O.ODMID
ORDER BY TOTALPRICE DESC;

-- 주문 수가 가장 많은 회원 순으로 정렬 - 회원아이디, 총주문수
SELECT ODMID, COUNT(*) AS TOTALORDERS
FROM ORDERS
GROUP BY ODMID
ORDER BY TOTALORDERS DESC;

SELECT *
FROM MEMBERS M,(SELECT ODMID, COUNT(*) AS TOTALORDERS
                FROM ORDERS
                GROUP BY ODMID
                ORDER BY TOTALORDERS DESC)OD
WHERE M.MID = OD.ODMID;

SELECT *
FROM MEMBERS M INNER JOIN (SELECT ODMID, COUNT(*) AS TOTALORDERS
                           FROM ORDERS
                           GROUP BY ODMID)OD
ON M.MID = OD.ODMID;

/* OUTER JOIN */
SELECT *
FROM MEMBERS M INNER JOIN ORDERS OD ON M.MID = OD.ODMID;

SELECT *
FROM MEMBERS M LEFT OUTER JOIN ORDERS OD ON M.MID = OD.ODMID; -- 왼쪽기준(MEMBERS)-24개 레코드

SELECT *
FROM MEMBERS M RIGHT OUTER JOIN ORDERS OD ON M.MID = OD.ODMID; -- 오른쪽기준(ORDERS)-5개 레코드

/* 주문 수가 가장 많은 회원 순으로 정렬(주문한 회원만) */
SELECT *
FROM MEMBERS M INNER JOIN (SELECT ODMID, COUNT(*) AS TOTALORDERS
                           FROM ORDERS
                           GROUP BY ODMID)OD ON M.MID = OD.ODMID;
/* 주문 수가 가장 많은 회원 순으로 정렬(주문하지 않은 회원까지) */
SELECT *
FROM MEMBERS M LEFT OUTER JOIN (SELECT ODMID, COUNT(*) AS TOTALORDERS
                           FROM ORDERS
                           GROUP BY ODMID)OD ON M.MID = OD.ODMID
ORDER BY OD. TOTALORDERS;

-- 판매량이 많은 순(인기제품)
--1. ORDERS
SELECT ODGCODE, SUM(ODQTY) AS TOTALQTY
FROM ORDERS
GROUP BY ODGCODE;
--2
SELECT *
FROM GOODS G INNER JOIN (SELECT ODGCODE, SUM(ODQTY) AS TOTALQTY
                         FROM ORDERS
                         GROUP BY ODGCODE) OD
            ON G.GCODE = OD.ODGCODE
ORDER BY OD.TOTALQTY; -- 판매 된적이 있는 상품만

SELECT G.*, NVL(OD.TOTALQTY,0) -- NULL값을 0으로 대체
FROM GOODS G LEFT OUTER JOIN (SELECT ODGCODE, SUM(ODQTY) AS TOTALQTY
                         FROM ORDERS
                         GROUP BY ODGCODE) OD
            ON G.GCODE = OD.ODGCODE
ORDER BY NVL(OD.TOTALQTY,0) DESC; -- 판매 된적이 없는 상품까지
